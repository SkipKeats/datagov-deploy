---
- include: fgdc2iso.yml
  tags: ['fgdc2iso']

- include: redis.yml
  tags: ['redis']

- name: install supervisor
  action: pip name=supervisor virtualenv=/usr/lib/ckan/

- name: copy supervisor.conf
  action: copy src=etc/init/supervisor.conf dest=/etc/init/supervisor.conf

- name: copy primary supervisord config
  copy: src=etc/supervisord-primary.conf dest=/etc/supervisord.conf
  when: ("catalog-harvester" in groups) and (groups["catalog-harvester"]|length == 1 or inventory_hostname == groups["catalog-harvester"][0])

- name: copy secondary supervisord config
  copy: src=etc/supervisord-secondary.conf dest=/etc/supervisord.conf
  when: ("catalog-harvester" in groups) and (groups["catalog-harvester"]|length > 1 and inventory_hostname == groups["catalog-harvester"][1])

#- name: copy primary cron job
#  copy: src=etc/cron.d/ckan-primary dest=/etc/cron.d/ckan
#  when: ("catalog-harvester" in groups) and (groups["catalog-harvester"]|length == 1 or inventory_hostname == groups["catalog-harvester"][0])
#  tags: ['cron']

- name: remove legacy /etc/cron.d/ckan
  file:
    path: /etc/cron.d/ckan
    state: absent

- name: copy primary cron job
  copy: src=etc/cron.d/ckan-primary dest=/etc/cron.d/ckan
  when: ("catalog-harvester" in groups) and (groups["catalog-harvester"]|length == 1 or inventory_hostname == groups["catalog-harvester"][0])
  tags: ['cron']

- name: ensure user ckan in cron.allow
  lineinfile:
    path: /etc/cron.allow
    line: ckan
    state: present
    create: yes
  when: ("catalog-harvester" in groups) and (groups["catalog-harvester"]|length > 1 and inventory_hostname == groups["catalog-harvester"][1])

- name: copy secondary cron job
#  copy: src=etc/cron.d/ckan-secondary dest=/etc/cron.d/ckan
  include: cron/secondary.yml
  when: ("catalog-harvester" in groups) and (groups["catalog-harvester"]|length > 1 and inventory_hostname == groups["catalog-harvester"][1])
  tags: ['cron']

- name: copy supervisor cron job
  copy: src=etc/cron.d/supervisor dest=/etc/cron.d/supervisor
  tags: ['cron']

- name: create superviserctl symlink
  action: file src=/usr/lib/ckan/bin/supervisorctl dest=/usr/bin/supervisorctl state=link

- name: start supervisor
  service: name=supervisor state=started
